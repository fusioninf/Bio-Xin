@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<style>
    .spinnermodal {
        background-color: #FFFFFF;
        height: 100%;
        left: 0;
        opacity: 0.5;
        position: fixed;
        top: 0;
        width: 100%;
        z-index: 100000;
    }
</style>
<section class="content">
    <div class="container-fluid">
        <div class="row">
            <!-- left column -->
            <div class="col-md-12">
                <!-- general form elements -->
                <div class="card card-primary">
                    <div class="card-header">
                        <div class="row">
                            <div class="col-md-6">
                                <h3>Daily Operation Checklist</h3>
                            </div>
                            <div class="col-md-6 text-right ">
                                <a class="btn btn-outline-warning" href="@Url.Action("AddDailyOperationChecklist", "DailyOperationChecklist", new {aId = 0})">
                                    <span class="fa fa-plus"></span>New Daily Operation Checklist
                                </a>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-md-2">
                                    <div class="form-group" id="divFromDate">
                                        <label for="txtFromDate">From Date</label>
                                        <input type="text" id="txtFromDate" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group" id="divToDate">
                                        <label for="txtToDate">To Date</label>
                                        <input type="text" id="txtToDate" class="form-control" />
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <div class="form-group row" id="divActivityType">
                                        <label for="ddlActivityType">Activity Type</label>
                                        <select class="form-control select2" style="width: 100%;" id="ddlActivityType"></select>
                                    </div>
                                </div>
                                <div class="col-md-2">
                                    <button style="margin-right: 27px;margin-top:12px" class="btn btn-primary" onclick="ShowReport()">Search</button>
                                </div>
                            </div>

                        </div>

                    </div>
                    <!-- /.card-header -->
                    <!-- form start -->
                    <div class="row">
                        <div class="col-md-12">
                            <div class="card-body">
                                <table class="table table-bordered table-striped table-hover">
                                    <thead>
                                        <tr style="background-color: aliceblue">
                                            <th style="text-align:center">#</th>
                                            <th style="text-align:center">Activity</th>
                                            <th style="text-align:center">Date</th>
                                            <!--<th style="text-align:center">Assined To</th>-->
                                            <th style="text-align:center">Branch</th>
                                            <th style="text-align:center">Action</th>

                                        </tr>
                                    </thead>
                                    <tbody id="manuallist">
                                        @{ int count = 1;}
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>@count</td>
                                                <td>@item.TypeMasterName</td>
                                                <td>@item.ActivityDate</td>
                                                <!--<td>@item.EmployeeName</td>-->
                                                <td>@item.BranchName</td>
                                                <td>
                                                    <button class="btn btn-sm btn-primary showBtn" data-bs-toggle="modal" data-bs-target="#viewModal" onclick="ShowData(@item.TypeMasterCode, @item.FilterDate)">View</button>
                                                </td>
                                            </tr>
                                            count++;
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>



                    </div>


                </div>

            </div>

        </div>
        <!-- /.row -->
    </div><!-- /.container-fluid -->
    <div class="spinnermodal" id="testSpan" style="display: none; z-index: 10001">
        <div style="position: fixed; z-index: 10001; top: 50%; left: 50%; height:50px">
            <img src="~/AssetStatic/img/loading_spinner.gif" />
        </div>
    </div>
</section>

<div class="modal fade" tabindex="-1" id="viewModal" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-lg" style="max-width: 100% !important">
        <div class="modal-content">
            <div class="modal-header">

            </div>
            <div class="modal-body" id="containerDetails">

            </div>
            <div class="modal-footer">
                <input type="text" style="display:none;" id="eid" />
                @*<button type="button" class="btn btn-danger" id="clsButton" data-dismiss="modal">Close</button>*@
                <button class="btn btn-primary" data-bs-target="#viewModal" data-bs-toggle="modal" data-bs-dismiss="modal">Close</button>
                @*<button type="button" class="btn btn-primary" id="clsEdit" onclick="GoToDo($('#eid').val())">Edit</button>*@
            </div>
        </div>
    </div>
</div>



@section Scripts
{
    <script type="text/javascript">
        $(document).ready(function () {
            LoadDate_P('#txtFromDate');
            LoadDate_C('#txtToDate');
            LoadActivityType('ddlActivityType');
        });
        function ShowReport() {
            var fromdate;
            var todate;
            /*if ($('#txtFromDate').val() == "") {
                swal("Please input from date");
                return;
            }
            else {
                fromdate = $('#txtFromDate').val();
            }
            if ($('#txtToDate').val() == "") {
                swal("Please input to date");
                return;
            }
            else {
                todate = $('#txtToDate').val();
            }*/
            fromdate = $('#txtFromDate').val();
            todate = $('#txtToDate').val();
            activitytype = $('#ddlActivityType').val();

            var urlpath = '@Url.Action("DailyOperationChecklist_Search", "DailyOperationChecklist")';
            $.ajax({
                url: urlpath,
                dataType: 'html',
                type: "Get",
                data: { fromdate: fromdate, todate: todate, activitytype: activitytype },
                /* async: false,*/
                beforeSend: function () {
                    debugger;
                    $('#testSpan').show();
                },
                success: function (data) {
                    $('#testSpan').hide();
                    data = JSON.parse(data);
                    if (data.UnAutorized == 1) {
                          window.location.href =  '@Url.Action("Logout", "Home")';
                    } else {
                        if (data.dataList[0].ReturnCode == "-99999") {
                            //API Project Session TimeOut
                            window.location.href = '@Url.Action("Logout", "Home")';
                        } else {

                            var row = "";
                            var count = 1;
                            $("#manuallist").html("");

                            var count = 1;
                            $.each(data.dataList, function (index, item) {
                                row += "<tr>";
                                row += "<td style='text-align:center'>" + count + "</td>";
                                row += "<td style='text-align:center'>" + item.TypeMasterName + "</td>";
                                row += "<td style='text-align:center'>" + item.ActivityDate + "</td>";
                                //row += "<td style='text-align:center'>" + item.EmployeeName + "</td>";
                                row += "<td style='text-align:center'>" + item.BranchName + "</td>";
                                row += "<td style='text-align:center'><button class='btn btn-sm btn-primary showBtn' data-bs-toggle='modal' data-bs-target='#viewModal' onclick='ShowData(" + item.TypeMasterCode + "," + item.FilterDate + ")'>View</button></td>";
                                row += "</tr>";
                                count = count + 1;
                            });
                            $("#manuallist").html(row);
                        }

                    }
                }
            });
        }
        function ShowData(TypeMasterCode, ActivityDate) {
            var id = "0";
            ViewOrder(id);
            GetDailyOperationChecklist(TypeMasterCode, ActivityDate);
        }
        function ViewOrder(id) {
            var urlpath = '@Url.Action("ViewDailyOperationChecklist", "DailyOperationChecklist")';
            $.ajax({
                url: urlpath,
                dataType: 'html',
                data: {id:id},
                type: "Get",
                async: false,
                success: function (data) {

                    $('#containerDetails').html(data);

                }
            });
        }


        function GetDailyOperationChecklist(TypeMasterCode, ActivityDate) {
            var activityType = TypeMasterCode.toString();   //3; //ActivityType.toString();
            var employeeId = ""; //EmployeeId.toString();
            var fromdate = ActivityDate; //DateConversionToDateMonthYear(ActivityDate.toString()); //$('#txtFromDate').val();
            var todate = ActivityDate;  //DateConversionToDateMonthYear(ActivityDate.toString()); //$('#txtToDate').val();

            var urlpath = '@Url.Action("DailyOperationChecklistViewData", "DailyOperationChecklist")';
            $.ajax({
                data: { ActivityType: activityType, EmployeeId: employeeId, fromdate: fromdate, todate: todate },
                url: urlpath,
                dataType: 'json',
                type: "Get",
                /* async: false,*/
                beforeSend: function () {
                    debugger;
                    $('#testSpan').show();
                },
                success: function (data) {
                    $('#testSpan').hide();

                    if (data.UnAutorized == 1) {
                        window.location.href = '@Url.Action("Logout", "Home")';
                    } else {
                        if (data.dataList[0].ReturnCode == "-99999") {
                            window.location.href = '@Url.Action("Logout", "Home")';
                        } else {
                            $('#ddlActivityTypeDisplay').val(data.dataList[0].TypeMasterName);
                            $('#txtActivityDate').val(data.dataList[0].ActivityDate);
                            $('#ddlBranch').val(data.dataList[0].BranchName);
                            $('#txtAssignedTo').val(data.dataList[0].EmployeeName);

                            for (var i = 0; i < data.dataList.length; i++) {
                                var tr = i + 1; //$('#salesOrder tbody tr').length + 1;

                                var newRow = $('<tr id="tr_' + tr + '">');

                                var td1 = $('<td>');
                                var textbox = tr;
                                td1.append(tr);
                                newRow.append(td1);

                                var td2 = $('<td>');
                                var textbox2 = $('<input class="form-control select2" style="width: 300px" disabled="disabled">')
                                    .attr('type', 'text')
                                    .attr('id', 'activity_' + tr)
                                    .val(data.dataList[i].TypeName);
                                td2.append(textbox2);
                                newRow.append(td2);

                                var td3 = $('<td>');
                                var textbox3 = $('<input class="form-control select2" style="width: 250px" disabled="disabled">')
                                    .attr('type', 'text')
                                    .attr('id', 'operationStatus_' + tr)
                                    .val(data.dataList[i].OperationStatusDesc);
                                td3.append(textbox3);
                                newRow.append(td3);

                                var td4 = $('<td>');
                                var textbox4 = $('<input class="form-control select2" style="width: 250px" disabled="disabled">')
                                    .attr('type', 'text')
                                    .attr('id', 'assinedTo_' + tr)
                                    .val(data.dataList[i].EmployeeName);
                                td4.append(textbox4);
                                newRow.append(td4);

                                var td5 = $('<td>');
                                var textbox5 = $('<input class="form-control select2" style="width: 250px" disabled="disabled">')
                                    .attr('type', 'text')
                                    .attr('id', 'remarks_' + tr)
                                    .val(data.dataList[i].Comments);
                                td5.append(textbox5);
                                newRow.append(td5);

                                $('#salesOrder tbody').append(newRow);
                            }


                        }



                    }

                }
            });
        }








        function LoadBranch(elementId) {
            var urlpath = '@Url.Action("GetBranch", "InventoryTransferRequest")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: { },
                async: false,
                success: function(data) {

                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append("<option value=''>--Select Branch--</option>");
                    for (var i = 0; i < data.length; i++) {

                        $('#' + elementId + '').append($("<option></option>").val(data[i].PrcCode).html(data[i].PrcName ));
                    }

                }
            });
        }
        function LoadActivityType(elementId) {
            var urlpath = '@Url.Action("GetActivityTypeforMemu", "DailyOperationChecklist")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: { ActivityType: "D" },
                async: false,
                success: function(data) {
                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append("<option value=''>--Select Activity Type--</option>");
                    for (var i = 0; i < data.length; i++) {
                        $('#' + elementId + '').append($("<option></option>").val(data[i].Code).html(data[i].Description));
                    }
                }
            });
        }
        @*function LoadActivityType(elementId) {
            var urlpath = '@Url.Action("GetActivityTypeMaster", "Activity")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: { },
            /*    data: {  },*/
                async: false,
                success: function(data) {

                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append("<option value=''>--Select Activity Type--</option>");
                    for (var i = 0; i < data.length; i++) {

                        $('#' + elementId + '').append($("<option></option>").val(data[i].ActivityTypeCode).html(data[i].ActivityTypeName));
                    }

                }
            });
        }*@
        function LoadActivity() {
            var ActivityType = $('#ddlActivityType').val();
            var urlpath = '@Url.Action("GetActivityMaster", "Activity")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: { ActivityType: ActivityType },
                async: false,
                success: function(data) {

                    $('#ddlActivity').empty();
                    $('#ddlActivity').append("<option value=''>--Select Activity--</option>");
                    for (var i = 0; i < data.length; i++) {
                        $('#ddlActivity').append($("<option></option>").val(data[i].ActivityCode).html(data[i].ActivityName));
                    }

                }
            });
        }
        function LoadBranch(elementId) {

            var CardType = "C";
            var urlpath = '@Url.Action("GetBranch", "InventoryTransferRequest")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: { },
                async: false,
                success: function(data) {

                    $('#' + elementId + '').empty();
                    $('#' + elementId + '').append("<option value='0'>--Select Branch--</option>");
                    for (var i = 0; i < data.length; i++) {

                        $('#' + elementId + '').append($("<option></option>").val(data[i].PrcCode).html(data[i].PrcName ));
                    }

                }
            });
        }
        function GetAssinedTo() {
            var urlpath = '@Url.Action("GetAssinedTo", "Activity")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: {  },
                async: false,
                success: function(data) {
                    assinedToList = data;
                }
            });
        }
        function GetActivityStatusMaster() {
            var urlpath = '@Url.Action("GetActivityStatusMaster", "Activity")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: {  },
                async: false,
                success: function(data) {
                    statusList = data;
                }
            });
        }
        function GetDailyOpertaionStatus() {
            var urlpath = '@Url.Action("GetDailyOpertaionStatus", "Activity")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: {  },
                async: false,
                success: function(data) {
                    operationStatusList = data;
                }
            });
        }
        function GetActivitySession() {
            var urlpath = '@Url.Action("GetActivitySession", "Activity")';
            $.ajax({
                url: urlpath,
                type: "Get",
                data: {  },
                async: false,
                success: function(data) {
                    sessionList = data;
                }
            });
        }

        function DateConversionToDateMonthYear(inputDate) {
            var parts = inputDate.split('/');
            var day = parts[0];
            var month = parts[1];
            var year = parts[2];
            var monthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
            var monthName = monthNames[parseInt(month) - 1];
            var formattedDate = day + '-' + monthName + '-' + year;
            return formattedDate
        }
    </script>
}

